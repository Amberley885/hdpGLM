% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/src_summaries.R
\name{plot_pexp_beta}
\alias{plot_pexp_beta}
\title{Plot posterior expectation of beta in each context}
\usage{
plot_pexp_beta(samples, X = NULL, W = NULL, pred.pexp.beta = FALSE,
  ncol.beta = NULL, ylab = NULL, nrow.w = NULL, ncol.w = NULL,
  smooth.line = FALSE)
}
\arguments{
\item{samples}{an output of the function \code{\link{hdpGLM}}}

\item{X}{a string vector with the name of the first-level covariates whose associated tau should be displayed}

\item{W}{a string vector with the name of a context-level covariate(s) whose linear effect will be displayed. If \code{NULL}, the linear effect tau of all context-level covariates are displayed. Note: the context-level covariate must have been included in the estimation of the model.}

\item{pred.pexp.beta}{boolean, if \code{TRUE} the plots will display a line with the predicted posterior expectation of betas obtained using the posterior expectation of taus, the linear coefficients of the expectation of beta}

\item{ncol.beta}{integer with number of rows of the grid used for each group of context-level covariates}

\item{ylab}{string, the label of the y-axis}

\item{nrow.w}{integer with the number of rows of the grid}

\item{ncol.w}{integer with the number of columns of the grid}

\item{smooth.line}{boolean, if \code{TRUE} the plot will display a regression line representing the regression of the posterior expectation of the linear coefficients betas on the context-level covariates. Default \code{FALSE}}
}
\description{
This function plots the posterior expectation of beta, the linear effect of the individual level covariates, as function of the context-level covariates
}
\examples{
set.seed(66)

n = 20    # sample size
K = 2     # number of clusters
nCov = 3  # Dx, number of ind-level covars
nCovj = 2 # Dw, number of context-level covars 
J = 15    # number of contexts

## simulating some data
sim_data = hdpGLM_simulateData(n=n, K=K, nCov=nCov, nCovj=nCovj, J=J, family='gaussian')

## estimation
mcmc    = list(burn.in=1, n.iter=50)
samples = hdpGLM(y ~ X1 + X2 + X3, y ~ W1 + W2, data=sim_data$data, mcmc=mcmc, n.display=1)

plot_pexp_beta(samples)
plot_pexp_beta(samples, X='X1', nrow.w=2)
plot_pexp_beta(samples, X='X1', ncol.w=2)
plot_pexp_beta(samples, X='X1', ncol.w=2, nrow.w=1)
plot_pexp_beta(samples, X='X1', ncol.beta=2)
plot_pexp_beta(samples, ncol.beta=2)
plot_pexp_beta(samples,  pred.pexp.beta=TRUE)
plot_pexp_beta(samples,  pred.pexp.beta=TRUE, W="W1")
plot_pexp_beta(samples,  pred.pexp.beta=TRUE, X="X1")
plot_pexp_beta(samples,  pred.pexp.beta=TRUE, W="W1", X=c("X1", "X2"))
plot_pexp_beta(samples, W='W1')
plot_pexp_beta(samples, W='W1', smooth.line=TRUE)
plot_pexp_beta(samples, W='W1', smooth.line=TRUE, pred.pexp.beta=TRUE)
plot_pexp_beta(samples, W='W1', smooth.line=TRUE, pred.pexp.beta=TRUE, ncol.beta=2)


}
